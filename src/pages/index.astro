---
import Layout from "../layouts/Layout.astro";
import { useCloud } from "freestyle-sh";
import { FeatureRequestsListCS } from "../cloudstate/feature-requests";
import { configureFreestyle } from "freestyle-sh";
import type { FeatureRequestsAppCS } from "$lib/cloudstate/app";
import cookie from "cookie";
import FeatureRequestsApp from "$lib/components/FeatureRequestsApp.svelte";

configureFreestyle({
  createHeaders: () => Astro.request.headers,
});

{
  // TODO: remove this once we have a better way to handle sessions
  const parsedCookies = cookie.parse(Astro.request.headers.get("cookie") || "");
  const sessionId =
    parsedCookies["freestyle-session-id"] || crypto.randomUUID();
  Astro.response.headers.set(
    "set-cookie",
    `freestyle-session-id=${sessionId}; Path=/; HttpOnly; SameSite=Lax`
  );
}

const featureRequestsCS = useCloud<typeof FeatureRequestsListCS>(
  "feature-requests-list"
);
const featureRequests = await featureRequestsCS.getRequests();
const app = useCloud<typeof FeatureRequestsAppCS>("feature-requests-app");
const user = await app.getUserInfo();
---

<Layout title="Freestyle Feature Requests">
  <main>
    <FeatureRequestsApp client:load {featureRequests} {user} />
  </main>
</Layout>
